{
  "id": "spiral-matrix",
  "title": "47. Spiral Matrix",
  "difficulty": "Medium",
  "category": "matrix",
  "link": "https://leetcode.com/problems/spiral-matrix/",
  "examples": [
    {
      "input": "matrix = [[1,2,3],[4,5,6],[7,8,9]]",
      "output": "[1,2,3,6,9,8,7,4,5]"
    },
    {
      "input": "matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]",
      "output": "[1,2,3,4,8,12,11,10,9,5,6,7]"
    }
  ],
  "starterCode": {
    "java": "class Solution {\n    public int[] spiralOrder(int[][] matrix) {\n        \n    }\n}",
    "python": "from typing import List\nclass Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        pass\n",
    "cpp": "#include <vector>\nusing namespace std;\nclass Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        return {};\n    }\n};"
  },
  "testCases": [
    {
      "matrix": [
        [
          1,
          2,
          3
        ],
        [
          4,
          5,
          6
        ],
        [
          7,
          8,
          9
        ]
      ]
    },
    {
      "matrix": [
        [
          1,
          2,
          3,
          4
        ],
        [
          5,
          6,
          7,
          8
        ],
        [
          9,
          10,
          11,
          12
        ]
      ]
    },
    {
      "matrix": [
        [
          1
        ]
      ]
    },
    {
      "matrix": [
        [
          1,
          2
        ],
        [
          3,
          4
        ]
      ]
    }
  ],
  "functionName": "spiralOrder",
  "params": [
    {
      "name": "matrix",
      "type": "int_array_2d",
      "visualizeType": "matrix"
    }
  ],
  "outputType": "int_array",
  "hints": [
    "Peel the matrix layer by layer using four boundaries (top, bottom, left, right) and traverse in four directions, shrinking the bounds after each side."
  ]
}
