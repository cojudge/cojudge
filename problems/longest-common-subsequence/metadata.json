{
  "id": "longest-common-subsequence",
  "title": "19. Longest Common Subsequence",
  "difficulty": "Medium",
  "category": "dp",
  "link": "https://leetcode.com/problems/longest-common-subsequence/",
  "examples": [
    {
      "input": "text1 = \"abcde\", text2 = \"ace\"",
      "output": "3"
    },
    {
      "input": "text1 = \"abc\", text2 = \"abc\"",
      "output": "3"
    }
  ],
  "starterCode": {
    "java": "class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        \n    }\n}",
    "python": "class Solution:\n    def longestCommonSubsequence(self, text1: str, text2: str) -> int:\n        pass\n",
    "cpp": "#include <string>\nusing namespace std;\nclass Solution {\npublic:\n    int longestCommonSubsequence(string text1, string text2) {\n        return 0;\n    }\n};"
  },
  "testCases": [
    {
      "text1": "abcde",
      "text2": "ace"
    },
    {
      "text1": "abc",
      "text2": "abc"
    },
    {
      "text1": "abc",
      "text2": "def"
    }
  ],
  "functionName": "longestCommonSubsequence",
  "params": [
    {
      "name": "text1",
      "type": "string"
    },
    {
      "name": "text2",
      "type": "string"
    }
  ],
  "outputType": "int",
  "hints": [
    "Standard 2D DP: dp[i][j] is the LCS length of prefixes text1[0..i-1], text2[0..j-1]."
  ]
}
