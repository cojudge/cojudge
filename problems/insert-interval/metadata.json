{
  "id": "insert-interval",
  "title": "35. Insert Interval",
  "difficulty": "Medium",
  "link": "https://leetcode.com/problems/insert-interval/",
  "category": "interval",
  "examples": [
    {
      "input": "intervals = [[1,3],[6,9]], newInterval = [2,5]",
      "output": "[[1,5],[6,9]]"
    },
    {
      "input": "intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]",
      "output": "[[1,2],[3,10],[12,16]]"
    },
    {
      "input": "intervals = [], newInterval = [5,7]",
      "output": "[[5,7]]"
    }
  ],
  "starterCode": {
    "java": "import java.util.*;\nclass Solution {\n    public int[][] insert(int[][] intervals, int[] newInterval) {\n        \n    }\n}",
    "python": "from typing import List\nclass Solution:\n    def insert(self, intervals: List[List[int]], newInterval: List[int]) -> List[List[int]]:\n        pass\n",
    "cpp": "#include <vector>\nusing namespace std;\nclass Solution {\npublic:\n    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {\n        return {};\n    }\n};"
  },
  "testCases": [
    {
      "intervals": [
        [
          1,
          3
        ],
        [
          6,
          9
        ]
      ],
      "newInterval": [
        2,
        5
      ]
    },
    {
      "intervals": [
        [
          1,
          2
        ],
        [
          3,
          5
        ],
        [
          6,
          7
        ],
        [
          8,
          10
        ],
        [
          12,
          16
        ]
      ],
      "newInterval": [
        4,
        8
      ]
    },
    {
      "intervals": [],
      "newInterval": [
        5,
        7
      ]
    },
    {
      "intervals": [
        [
          1,
          5
        ]
      ],
      "newInterval": [
        2,
        3
      ]
    },
    {
      "intervals": [
        [
          1,
          5
        ]
      ],
      "newInterval": [
        2,
        7
      ]
    }
  ],
  "functionName": "insert",
  "params": [
    {
      "name": "intervals",
      "type": "int_array_2d"
    },
    {
      "name": "newInterval",
      "type": "int_array"
    }
  ],
  "outputType": "int_array_2d",
  "hints": [
    "Walk through intervals in order: add all intervals ending before newInterval starts.",
    "For overlapping intervals, merge by expanding newInterval to [min(start), max(end)] until overlaps end.",
    "After merging, append the merged newInterval, then append the remaining intervals.",
    "You don't need to sort if the input is already sorted and non-overlapping."
  ]
}
