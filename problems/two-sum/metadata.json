{
  "id": "two-sum",
  "title": "1. Two Sum",
  "difficulty": "Easy",
  "link": "https://leetcode.com/problems/two-sum/",
  "category": "array",
  "examples": [
    {
      "input": "nums = [2,7,11,15], target = 9",
      "output": "[0,1]",
      "explanation": "Because nums[0] + nums[1] == 9, we return [0, 1]."
    },
    {
      "input": "nums = [3,2,4], target = 6",
      "output": "[1,2]"
    },
    {
      "input": "nums = [3,3], target = 6",
      "output": "[0,1]"
    }
  ],
  "starterCode": {
    "java": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        \n    }\n}",
    "python": "from typing import List\nclass Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        ",
    "cpp": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        return {};\n    }\n};"
  },
  "testCases": [
    {
      "nums": "[2,7,11,15]",
      "target": 9
    },
    {
      "nums": "[3,2,4]",
      "target": 6
    },
    {
      "nums": "[3,3]",
      "target": 6
    }
  ],
  "functionName": "twoSum",
  "params": [
    {
      "name": "nums",
      "type": "int_array"
    },
    {
      "name": "target",
      "type": "int"
    }
  ],
  "outputType": "int_array",
  "hints": [
    "A naive `O(n^2)` solution will have a nested for loop to find (i,j) where `nums[i] + nums[j] == target`. Can you think of a better solution?",
    "Use HashMap. The key will be `nums[i]` while the value will be `i`."
  ]
}
