{
  "id": "minimum-window-substring",
  "title": "52. Minimum Window Substring",
  "difficulty": "Hard",
  "link": "https://leetcode.com/problems/minimum-window-substring/",
  "category": "string",
  "examples": [
    {
      "input": "s=\"ADOBECODEBANC\", t=\"ABC\"",
      "output": "\"BANC\""
    },
    {
      "input": "s=\"a\", t=\"a\"",
      "output": "\"a\""
    }
  ],
  "starterCode": {
    "java": "class Solution {\n    public String minWindow(String s, String t) {\n        \n    }\n}",
    "python": "class Solution:\n    def minWindow(self, s: str, t: str) -> str:\n        pass\n",
    "cpp": "#include <string>\nusing namespace std;\nclass Solution {\npublic:\n    string minWindow(string s, string t) {\n        return \"\";\n    }\n};"
  },
  "testCases": [
    {
      "s": "ADOBECODEBANC",
      "t": "ABC"
    },
    {
      "s": "a",
      "t": "a"
    },
    {
      "s": "a",
      "t": "aa"
    }
  ],
  "functionName": "minWindow",
  "params": [
    {
      "name": "s",
      "type": "string"
    },
    {
      "name": "t",
      "type": "string"
    }
  ],
  "outputType": "string",
  "hints": [
    "Sliding window with a frequency map. Expand right to satisfy all requirements, then contract left to find the minimum window while maintaining validity."
  ]
}
