{
  "id": "product-of-array-except-self",
  "title": "4. Product of Array Except Self",
  "difficulty": "Medium",
  "category": "array",
  "link": "https://leetcode.com/problems/product-of-array-except-self/",
  "examples": [
    {
      "input": "nums = [1,2,3,4]",
      "output": "[24,12,8,6]"
    },
    {
      "input": "nums = [-1,1,0,-3,3]",
      "output": "[0,0,9,0,0]"
    }
  ],
  "starterCode": {
    "java": "class Solution {\n    public int[] productExceptSelf(int[] nums) {\n        \n    }\n}",
    "python": "from typing import List\nclass Solution:\n    def productExceptSelf(self, nums: List[int]) -> List[int]:\n        ",
    "cpp": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        return {};\n    }\n};"
  },
  "testCases": [
    {
      "nums": "[1,2,3,4]"
    },
    {
      "nums": "[-1,1,0,-3,3]"
    },
    {
      "nums": "[0,0]"
    },
    {
      "nums": "[0,1,2,3]"
    },
    {
      "nums": "[2,3,4,5,6]"
    }
  ],
  "functionName": "productExceptSelf",
  "params": [
    {
      "name": "nums",
      "type": "int_array"
    }
  ],
  "outputType": "int_array",
  "hints": [
    "Solve in O(n) time without using division and with O(1) extra space (output array not counted). A standard approach computes prefix products in one pass and multiplies by a running suffix product in reverse."
  ]
}
