{
  "id": "number-of-1-bits",
  "title": "12. Number of 1 Bits",
  "difficulty": "Easy",
  "link": "https://leetcode.com/problems/number-of-1-bits/",
  "category": "binary",
  "examples": [
    {
      "input": "n = 11 (0b1011)",
      "output": "3"
    },
    {
      "input": "n = 128 (0b10000000)",
      "output": "1"
    }
  ],
  "starterCode": {
    "java": "class Solution {\n    public int hammingWeight(int n) {\n        \n    }\n}",
    "python": "class Solution:\n    def hammingWeight(self, n: int) -> int:\n        pass\n",
    "cpp": "class Solution {\npublic:\n    int hammingWeight(uint32_t n) {\n        return 0;\n    }\n};"
  },
  "testCases": [
    {
      "n": 11
    },
    {
      "n": 128
    },
    {
      "n": 2147483645
    }
  ],
  "functionName": "hammingWeight",
  "params": [
    {
      "name": "n",
      "type": "int"
    }
  ],
  "outputType": "int",
  "hints": [
    "Use Kernighan's algorithm: repeatedly clear the lowest set bit with n &= (n - 1) and count iterations."
  ]
}
