{
  "id": "find-minimum-in-rotated-sorted-array",
  "title": "7. Find Minimum in Rotated Sorted Array",
  "difficulty": "Medium",
  "category": "array",
  "link": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",
  "examples": [
    {
      "input": "nums = [3,4,5,1,2]",
      "output": "1"
    },
    {
      "input": "nums = [4,5,6,7,0,1,2]",
      "output": "0"
    }
  ],
  "starterCode": {
    "java": "class Solution {\n    public int findMin(int[] nums) {\n        \n    }\n}",
    "python": "from typing import List\nclass Solution:\n    def findMin(self, nums: List[int]) -> int:\n        ",
    "cpp": "#include <vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    int findMin(vector<int>& nums) {\n        return 0;\n    }\n};"
  },
  "testCases": [
    {
      "nums": "[3,4,5,1,2]"
    },
    {
      "nums": "[4,5,6,7,0,1,2]"
    },
    {
      "nums": "[11,13,15,17]"
    }
  ],
  "functionName": "findMin",
  "params": [
    {
      "name": "nums",
      "type": "int_array"
    }
  ],
  "outputType": "int",
  "hints": [
    "Use binary search on the rotation pivot: if left half is sorted, the min is on the right; otherwise it's on the left. O(log n) time."
  ]
}
